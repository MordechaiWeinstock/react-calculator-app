{"version":3,"sources":["components/Button.js","App.js","index.js"],"names":["Button","displayHandler","keyProps","className","type","onClick","value","App","state","keys","display","temp","operator","e","setState","console","log","evaluate","join","prevState","this","map","key","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAaeA,G,MAXA,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,SAC7B,OACI,4BACIC,UAAWD,EAASE,KACpBC,QAAS,kBAAMJ,EAAeC,EAASI,SAEtCJ,EAASI,S,QCgEPC,E,4MAlEXC,MAAQ,CACJC,KAAM,CACF,CAACH,MAAO,KAAMF,KAAM,YACpB,CAACE,MAAO,IAAKF,KAAM,YACnB,CAACE,MAAO,IAAKF,KAAM,UACnB,CAACE,MAAO,IAAKF,KAAM,UACnB,CAACE,MAAO,IAAKF,KAAM,UACnB,CAACE,MAAO,IAAKF,KAAM,YACnB,CAACE,MAAO,IAAKF,KAAM,UACnB,CAACE,MAAO,IAAKF,KAAM,UACnB,CAACE,MAAO,IAAKF,KAAM,UACnB,CAACE,MAAO,IAAKF,KAAM,YACnB,CAACE,MAAO,IAAKF,KAAM,UACnB,CAACE,MAAO,IAAKF,KAAM,UACnB,CAACE,MAAO,IAAKF,KAAM,UACnB,CAACE,MAAO,IAAKF,KAAM,YACnB,CAACE,MAAO,IAAKF,KAAM,eACnB,CAACE,MAAO,IAAKF,KAAM,UACnB,CAACE,MAAO,IAAKF,KAAM,aAEvBM,QAAS,IACTC,KAAM,GACNC,SAAU,I,EAGdX,eAAiB,SAACY,GACJ,OAANA,EACA,EAAKC,SAAS,CAAEJ,QAAS,MACZ,MAANG,GACPE,QAAQC,IAAKC,YAAS,CAAC,EAAKT,MAAME,QAAS,EAAKF,MAAMI,SAAU,EAAKJ,MAAMG,MAAMO,KAAK,MACtF,EAAKJ,SAAS,CAAEJ,QAAUO,YAAS,CAAC,EAAKT,MAAME,QAAS,EAAKF,MAAMI,SAAU,EAAKJ,MAAMG,MAAMO,KAAK,KAAOP,KAAM,GAAIC,SAAU,MAS9H,EAAKE,UAAS,SAAAK,GACV,MAA0B,MAAtBA,EAAUT,QACF,CAAEA,QAASG,GAEX,CAAEH,QAASS,EAAUT,QAAUG,O,uDAS5C,IAAD,OACN,OACI,yBAAKV,UAAU,WACX,yBAAKA,UAAU,WACViB,KAAKZ,MAAME,SAEhB,yBAAKP,UAAU,iBACViB,KAAKZ,MAAMC,KAAKY,KAAI,SAAAC,GAAG,OAAI,kBAAC,EAAD,CAAQpB,SAAUoB,EAAKrB,eAAgB,EAAKA,eAAgBqB,IAAKA,EAAIhB,iB,GA5DnGiB,IAAMC,WCAxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2c0d71f9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Button = ({displayHandler, keyProps}) => {\r\n    return (\r\n        <button\r\n            className={keyProps.type}\r\n            onClick={() => displayHandler(keyProps.value)}\r\n        >\r\n            {keyProps.value}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\nimport './App.css';\nimport Button from './components/Button';\nimport { evaluate } from 'mathjs';\n\nclass App extends React.Component {\n    state = {\n        keys: [\n            {value: \"AC\", type: \"clear AC\"},\n            {value: \"/\", type: \"operator\"},\n            {value: \"7\", type: \"number\"},\n            {value: \"8\", type: \"number\"},\n            {value: \"9\", type: \"number\"},\n            {value: \"*\", type: \"operator\"},\n            {value: \"4\", type: \"number\"},\n            {value: \"5\", type: \"number\"},\n            {value: \"6\", type: \"number\"},\n            {value: \"-\", type: \"operator\"},\n            {value: \"1\", type: \"number\"},\n            {value: \"2\", type: \"number\"},\n            {value: \"3\", type: \"number\"},\n            {value: \"+\", type: \"operator\"},\n            {value: \"0\", type: \"number zero\"},\n            {value: \".\", type: \"number\"},\n            {value: \"=\", type: \"operator\"}\n        ],\n        display: \"0\",\n        temp: \"\",\n        operator: \"\"\n    }\n\n    displayHandler = (e) => {\n        if (e === \"AC\") {\n            this.setState({ display: \"0\" });\n        } else if (e === \"=\") {\n            console.log((evaluate([this.state.display, this.state.operator, this.state.temp].join(\"\"))));\n            this.setState({ display: (evaluate([this.state.display, this.state.operator, this.state.temp].join(\"\"))), temp: \"\", operator: \"\" });\n            // maybe the above can be combined with the below with all other operators\n        } else  /* if (\"/*-+\".includes(e)) {\n// this commented out part is to add functionality:\n// so the operators don't show up on display,\n// after pressing an operator when next number is pressed clear the display first,\n            this.setState({ operator: e, temp: this.state.display});\n            this.setState({ display: (evaluate([this.state.display, this.state.operator, this.state.temp].join(\"\"))), temp: this.state.display, operator: e});\n        } else  */{\n            this.setState(prevState => {\n                if (prevState.display === \"0\") {\n                    return ({ display: e });\n                } else {\n                    return ({ display: prevState.display + e });\n                }\n            });\n// add functionality for ac/c (check out iphone calc)\n// add functionality for only 1 dot in any display at once\n// add iphone css from codepen...\n        }\n    }\n\n    render () {\n        return (\n            <div className=\"wrapper\">\n                <div className=\"display\">\n                    {this.state.display}\n                </div>\n                <div className=\"keypadWrapper\">\n                    {this.state.keys.map(key => <Button keyProps={key} displayHandler={this.displayHandler} key={key.value}/>)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}